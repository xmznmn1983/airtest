# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, NetEase Co, Ltd.
# This file is distributed under the same license as the poco package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: poco \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-10 14:16+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/poco.sdk.std.protocol.rst:2
msgid "poco.sdk.std.protocol module"
msgstr ""

#: of poco.sdk.std.protocol.SimpleProtocolFilter:1
msgid "基类：:class:`object`"
msgstr ""

#: of poco.sdk.std.protocol.SimpleProtocolFilter:1
msgid ""
"简单协议过滤器 协议按照 [有效数据字节数][有效数据] 这种协议包的格式进行打包和解包 [有效数据字节数]长度HEADER_SIZE字节 "
"[有效数据]长度有效数据字节数字节 本类按照这种方式，顺序从数据流中取出数据进行拼接，一旦接收完一个完整的协议包，就会将协议包返回 "
"[有效数据]字段接收到后会按照utf-8进行解码，因为在传输过程中是用utf-8进行编码的 所有编解码的操作在该类中完成"
msgstr ""

#: of poco.sdk.std.protocol.SimpleProtocolFilter.input:1
msgid "小数据片段拼接成完整数据包 如果内容足够则yield数据包"
msgstr ""

#: of poco.sdk.std.protocol.SimpleProtocolFilter.pack:1
msgid "content should be str"
msgstr ""

#: of poco.sdk.std.protocol.SimpleProtocolFilter.unpack:1
msgid "return length, content"
msgstr ""

#~ msgid "poco\\.sdk\\.std\\.protocol module"
#~ msgstr ""

#~ msgid "Bases: :class:`object`"
#~ msgstr ""

