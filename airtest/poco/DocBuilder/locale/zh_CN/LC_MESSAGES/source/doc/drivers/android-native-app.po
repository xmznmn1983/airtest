# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, NetEase Co, Ltd.
# This file is distributed under the same license as the poco package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: poco \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-09-28 10:49+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/doc/drivers/android-native-app.rst:3
msgid "Android native app (poco driver)"
msgstr ""

#: ../../source/doc/drivers/android-native-app.rst:5
msgid ""
"Poco also supports to write tests for Android native apps. It is an "
"alternative framework for `xiaocong/uiautomator`_ and its APIs are more "
"powerful and easy to use. You don't need to setup an AndroidSDK "
"environment and other dependencies. Only adb tools are required. Just "
"simply install poco with following command."
msgstr ""

#: ../../source/doc/drivers/android-native-app.rst:13
msgid ""
"The following example shows how to start writing test scripts. Remember "
"to connect an Android device to your PC/mac first and enable the **ADB "
"DEBUG MODE**."
msgstr ""

#: ../../source/doc/drivers/android-native-app.rst:25
msgid ""
"If multiple devices are connected, simply invoke airtest "
"``connect_device``."
msgstr ""

#: ../../source/doc/drivers/android-native-app.rst:37
msgid ""
"If you want to control multiple devices at one time, see the following "
"example."
msgstr ""

#: ../../source/doc/drivers/android-native-app.rst:53
msgid ""
"More usage are similar to poco drivers for other game engines. Use "
"`PocoHierarchyViewer`_ to retrieve the view structure."
msgstr ""

